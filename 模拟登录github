# github的验证问题尚未解决
import requests
from lxml import etree

class Login(object):
    def __init__(self):
        self.headers = {
            'Referer': 'https://github.com/',
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36',
            'Host': 'github.com'
        }
        self.login_url = 'https://github.com/login'
        self.post_url = 'https://github.com/session'
        self.logined_url = 'https://github.com/settings/profile'
        # requests库的Session，它可以帮助我们维持一个会话，而且可以自动处理Cookies
        self.session = requests.Session()

    def token(self):
        '''
        用Session对象的get()方法访问Github的登录页面
        然后用XPath解析出登陆所需的authenticity_token信息并返回
        '''
        response = self.session.get(self.login_url, headers=self.headers)
        selector = etree.HTML(response.text)
        token = selector.xpath('//*[@id="login"]/form/input[2]/@value')[0]
        # print(token)
        return token

    def login(self, email, password):
        post_data = {
            'commit': 'Sign in',
            'utf8': '✓',
            'authenticity_token': self.token(),
            'login': email,
            'password': password
        }
        # 用Session对象的post()方法模拟登陆
        response = self.session.post(self.post_url, data=post_data, headers=self.headers)
        # 由于requests自动处理了重定向信息，我们登陆成功后就可以直接跳转到首页，首页会显示所有的repositories，
        # 得到响应之后我们用dynamics()方法对其进行处理
        if response.status_code == 200:
            self.dynamics(response.text)

    def dynamics(self, html):
        # 用XPath对信息进行提取，提取了所有repositories的名称，然后将其遍历输出
        selector = etree.HTML(html)
        dynamics = selector.xpath('//div[@class="pinned-item-list-item-content"]//span[contains(class, "repo"]/text()')
        # print(dynamics)
        for dynamic in dynamics:
            print(dynamic)

if __name__ == '__main__':
    login = Login()
    login.login(email='wxj9182', password='*****')
