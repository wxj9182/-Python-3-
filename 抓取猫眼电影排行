import requests
import re
import json
import time
from requests.exceptions import RequestException

def get_one_page(url):  # 获得url页面
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36'
        }
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            return response.text
        return None
    except RequestException:
        return None

def parse_one_page(html):  # 解析html页面
    pattern = re.compile('<dd>.*?board-index.*?>(.*?)</i>.*?data-src="(.*?)".*?name.*?a.*?>(.*?)</a>.*?star.*?>(.*?)</p>.*?releasetime.*?>(.*?)</p>.*?integer.*?>(.*?)</i>.*?fraction.*?>(.*?)</i>.*?</dd>', re.S)  # 正则表达式
    items = re.findall(pattern, html)
    for item in items:  # 遍历提取结果并生成字典
        yield {
            'index': item[0],
            'image': item[1],
            'title': item[2].strip(),
            'actor': item[3].strip()[3:] if len(item[3]) > 3 else '',
            'time': item[4].strip()[5:] if len(item[4]) > 5 else '',
            'score': item[5].strip() + item[6].strip()
        }

def write_to_file(content):  # 将字典写入到文本文件
    with open('result.txt', 'a', encoding='utf-8') as f:  # 写入result文本文件
        # print(type(json.dumps(content)))  # 通过JSON库的dumps()方法实现字典的序列化
        f.write(json.dumps(content, ensure_ascii=False)+'\n')  # 指定ensure_ascii参数为False，这样可以保证输出结果是中文形式而不是Unicode编码


def main(offset):
    url = 'http://maoyan.com/board/4?offset=' + str(offset)
    html = get_one_page(url)
    for item in parse_one_page(html):
        # print(item)
        write_to_file(item)

if __name__ == "__main__":
    for i in range(10):
        main(offset=i * 10)
        time.sleep(1)
